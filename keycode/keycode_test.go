// qmk-go - go client library for VIA-enabled QMK keyboards
// Copyright (c) 2022 Ian McLinden. All rights reserved
//
// This file is released under GNU LGPL 2.1 on Linux,
// and under the 3-clause BSD license on all other platforms

package keycode

import (
	"bytes"
	"testing"
)

var keycodeTests = []struct {
	Input   string
	Name    string
	Keycode Keycode
	Bytes   []byte
}{
	{"{KC_TRANSPARENT}", "KC_TRANSPARENT", KC_TRANSPARENT, []byte{0x00, 0x01}},
	{"{KC_TRNS}", "KC_TRANSPARENT", KC_TRANSPARENT, []byte{0x00, 0x01}},

	{"{KC_ENT}", "KC_ENTER", KC_ENTER, []byte{0x00, 0x28}},
	{"{KC_ESC}", "KC_ESCAPE", KC_ESCAPE, []byte{0x00, 0x29}},
	{"{KC_BSPC}", "KC_BACKSPACE", KC_BACKSPACE, []byte{0x00, 0x2a}},
	{"{KC_SPC}", "KC_SPACE", KC_SPACE, []byte{0x00, 0x2c}},
	{"{KC_MINS}", "KC_MINUS", KC_MINUS, []byte{0x00, 0x2d}},
	{"{KC_EQL}", "KC_EQUAL", KC_EQUAL, []byte{0x00, 0x2e}},
	{"{KC_LBRC}", "KC_LEFT_BRACKET", KC_LEFT_BRACKET, []byte{0x00, 0x2f}},
	{"{KC_RBRC}", "KC_RIGHT_BRACKET", KC_RIGHT_BRACKET, []byte{0x00, 0x30}},
	{"{KC_BSLS}", "KC_BACKSLASH", KC_BACKSLASH, []byte{0x00, 0x31}},
	{"{KC_NUHS}", "KC_NONUS_HASH", KC_NONUS_HASH, []byte{0x00, 0x32}},
	{"{KC_SCLN}", "KC_SEMICOLON", KC_SEMICOLON, []byte{0x00, 0x33}},
	{"{KC_QUOT}", "KC_QUOTE", KC_QUOTE, []byte{0x00, 0x34}},
	{"{KC_GRV}", "KC_GRAVE", KC_GRAVE, []byte{0x00, 0x35}},
	{"{KC_COMM}", "KC_COMMA", KC_COMMA, []byte{0x00, 0x36}},
	{"{KC_SLSH}", "KC_SLASH", KC_SLASH, []byte{0x00, 0x38}},
	{"{KC_NUBS}", "KC_NONUS_BACKSLASH", KC_NONUS_BACKSLASH, []byte{0x00, 0x64}},

	{"{KC_CAPS}", "KC_CAPS_LOCK", KC_CAPS_LOCK, []byte{0x00, 0x39}},
	{"{KC_SCRL}", "KC_SCROLL_LOCK", KC_SCROLL_LOCK, []byte{0x00, 0x47}},
	{"{KC_NUM}", "KC_NUM_LOCK", KC_NUM_LOCK, []byte{0x00, 0x53}},
	{"{KC_LCAP}", "KC_LOCKING_CAPS_LOCK", KC_LOCKING_CAPS_LOCK, []byte{0x00, 0x82}},
	{"{KC_LNUM}", "KC_LOCKING_NUM_LOCK", KC_LOCKING_NUM_LOCK, []byte{0x00, 0x83}},
	{"{KC_LSCR}", "KC_LOCKING_SCROLL_LOCK", KC_LOCKING_SCROLL_LOCK, []byte{0x00, 0x84}},

	{"{KC_PSCR}", "KC_PRINT_SCREEN", KC_PRINT_SCREEN, []byte{0x00, 0x46}},
	{"{KC_PAUS}", "KC_PAUSE", KC_PAUSE, []byte{0x00, 0x48}},
	{"{KC_BRK}", "KC_PAUSE", KC_PAUSE, []byte{0x00, 0x48}},
	{"{KC_INS}", "KC_INSERT", KC_INSERT, []byte{0x00, 0x49}},
	{"{KC_PGUP}", "KC_PAGE_UP", KC_PAGE_UP, []byte{0x00, 0x4b}},
	{"{KC_DEL}", "KC_DELETE", KC_DELETE, []byte{0x00, 0x4c}},
	{"{KC_PGDN}", "KC_PAGE_DOWN", KC_PAGE_DOWN, []byte{0x00, 0x4e}},
	{"{KC_RGHT}", "KC_RIGHT", KC_RIGHT, []byte{0x00, 0x4f}},
	{"{KC_APP}", "KC_APPLICATION", KC_APPLICATION, []byte{0x00, 0x65}},
	{"{KC_EXEC}", "KC_EXECUTE", KC_EXECUTE, []byte{0x00, 0x74}},
	{"{KC_SLCT}", "KC_SELECT", KC_SELECT, []byte{0x00, 0x77}},
	{"{KC_AGIN}", "KC_AGAIN", KC_AGAIN, []byte{0x00, 0x79}},
	{"{KC_PSTE}", "KC_PASTE", KC_PASTE, []byte{0x00, 0x7d}},
	{"{KC_ERAS}", "KC_ALTERNATE_ERASE", KC_ALTERNATE_ERASE, []byte{0x00, 0x99}},
	{"{KC_SYRQ}", "KC_SYSTEM_REQUEST", KC_SYSTEM_REQUEST, []byte{0x00, 0x9a}},
	{"{KC_CNCL}", "KC_CANCEL", KC_CANCEL, []byte{0x00, 0x9b}},
	{"{KC_CLR}", "KC_CLEAR", KC_CLEAR, []byte{0x00, 0x9c}},
	{"{KC_PRIR}", "KC_PRIOR", KC_PRIOR, []byte{0x00, 0x9d}},
	{"{KC_RETN}", "KC_RETURN", KC_RETURN, []byte{0x00, 0x9e}},
	{"{KC_SEPR}", "KC_SEPARATOR", KC_SEPARATOR, []byte{0x00, 0x9f}},
	{"{KC_CLAG}", "KC_CLEAR_AGAIN", KC_CLEAR_AGAIN, []byte{0x00, 0xa2}},
	{"{KC_CRSL}", "KC_CRSEL", KC_CRSEL, []byte{0x00, 0xa3}},
	{"{KC_EXSL}", "KC_EXSEL", KC_EXSEL, []byte{0x00, 0xa4}},

	{"{KC_PSLS}", "KC_KP_SLASH", KC_KP_SLASH, []byte{0x00, 0x54}},
	{"{KC_PAST}", "KC_KP_ASTERISK", KC_KP_ASTERISK, []byte{0x00, 0x55}},
	{"{KC_PMNS}", "KC_KP_MINUS", KC_KP_MINUS, []byte{0x00, 0x56}},
	{"{KC_PPLS}", "KC_KP_PLUS", KC_KP_PLUS, []byte{0x00, 0x57}},
	{"{KC_PENT}", "KC_KP_ENTER", KC_KP_ENTER, []byte{0x00, 0x58}},
	{"{KC_P1}", "KC_KP_1", KC_KP_1, []byte{0x00, 0x59}},
	{"{KC_P2}", "KC_KP_2", KC_KP_2, []byte{0x00, 0x5a}},
	{"{KC_P3}", "KC_KP_3", KC_KP_3, []byte{0x00, 0x5b}},
	{"{KC_P4}", "KC_KP_4", KC_KP_4, []byte{0x00, 0x5c}},
	{"{KC_P5}", "KC_KP_5", KC_KP_5, []byte{0x00, 0x5d}},
	{"{KC_P6}", "KC_KP_6", KC_KP_6, []byte{0x00, 0x5e}},
	{"{KC_P7}", "KC_KP_7", KC_KP_7, []byte{0x00, 0x5f}},
	{"{KC_P8}", "KC_KP_8", KC_KP_8, []byte{0x00, 0x60}},
	{"{KC_P9}", "KC_KP_9", KC_KP_9, []byte{0x00, 0x61}},
	{"{KC_P0}", "KC_KP_0", KC_KP_0, []byte{0x00, 0x62}},
	{"{KC_PDOT}", "KC_KP_DOT", KC_KP_DOT, []byte{0x00, 0x63}},
	{"{KC_PEQL}", "KC_KP_EQUAL", KC_KP_EQUAL, []byte{0x00, 0x67}},
	{"{KC_PCMM}", "KC_KP_COMMA", KC_KP_COMMA, []byte{0x00, 0x85}},

	{"{KC_INT1}", "KC_INTERNATIONAL_1", KC_INTERNATIONAL_1, []byte{0x00, 0x87}},
	{"{KC_INT2}", "KC_INTERNATIONAL_2", KC_INTERNATIONAL_2, []byte{0x00, 0x88}},
	{"{KC_INT3}", "KC_INTERNATIONAL_3", KC_INTERNATIONAL_3, []byte{0x00, 0x89}},
	{"{KC_INT4}", "KC_INTERNATIONAL_4", KC_INTERNATIONAL_4, []byte{0x00, 0x8a}},
	{"{KC_INT5}", "KC_INTERNATIONAL_5", KC_INTERNATIONAL_5, []byte{0x00, 0x8b}},
	{"{KC_INT6}", "KC_INTERNATIONAL_6", KC_INTERNATIONAL_6, []byte{0x00, 0x8c}},
	{"{KC_INT7}", "KC_INTERNATIONAL_7", KC_INTERNATIONAL_7, []byte{0x00, 0x8d}},
	{"{KC_INT8}", "KC_INTERNATIONAL_8", KC_INTERNATIONAL_8, []byte{0x00, 0x8e}},
	{"{KC_INT9}", "KC_INTERNATIONAL_9", KC_INTERNATIONAL_9, []byte{0x00, 0x8f}},
	{"{KC_LNG1}", "KC_LANGUAGE_1", KC_LANGUAGE_1, []byte{0x00, 0x90}},
	{"{KC_LNG2}", "KC_LANGUAGE_2", KC_LANGUAGE_2, []byte{0x00, 0x91}},
	{"{KC_LNG3}", "KC_LANGUAGE_3", KC_LANGUAGE_3, []byte{0x00, 0x92}},
	{"{KC_LNG4}", "KC_LANGUAGE_4", KC_LANGUAGE_4, []byte{0x00, 0x93}},
	{"{KC_LNG5}", "KC_LANGUAGE_5", KC_LANGUAGE_5, []byte{0x00, 0x94}},
	{"{KC_LNG6}", "KC_LANGUAGE_6", KC_LANGUAGE_6, []byte{0x00, 0x95}},
	{"{KC_LNG7}", "KC_LANGUAGE_7", KC_LANGUAGE_7, []byte{0x00, 0x96}},
	{"{KC_LNG8}", "KC_LANGUAGE_8", KC_LANGUAGE_8, []byte{0x00, 0x97}},
	{"{KC_LNG9}", "KC_LANGUAGE_9", KC_LANGUAGE_9, []byte{0x00, 0x98}},

	{"{KC_LCTL}", "KC_LEFT_CTRL", KC_LEFT_CTRL, []byte{0x00, 0xe0}},
	{"{KC_LSFT}", "KC_LEFT_SHIFT", KC_LEFT_SHIFT, []byte{0x00, 0xe1}},
	{"{KC_LALT}", "KC_LEFT_ALT", KC_LEFT_ALT, []byte{0x00, 0xe2}},
	{"{KC_LOPT}", "KC_LEFT_ALT", KC_LEFT_ALT, []byte{0x00, 0xe2}},
	{"{KC_LGUI}", "KC_LEFT_GUI", KC_LEFT_GUI, []byte{0x00, 0xe3}},
	{"{KC_LCMD}", "KC_LEFT_GUI", KC_LEFT_GUI, []byte{0x00, 0xe3}},
	{"{KC_LWIN}", "KC_LEFT_GUI", KC_LEFT_GUI, []byte{0x00, 0xe3}},
	{"{KC_RCTL}", "KC_RIGHT_CTRL", KC_RIGHT_CTRL, []byte{0x00, 0xe4}},
	{"{KC_RSFT}", "KC_RIGHT_SHIFT", KC_RIGHT_SHIFT, []byte{0x00, 0xe5}},
	{"{KC_RALT}", "KC_RIGHT_ALT", KC_RIGHT_ALT, []byte{0x00, 0xe6}},
	{"{KC_ALGR}", "KC_RIGHT_ALT", KC_RIGHT_ALT, []byte{0x00, 0xe6}},
	{"{KC_ROPT}", "KC_RIGHT_ALT", KC_RIGHT_ALT, []byte{0x00, 0xe6}},
	{"{KC_RGUI}", "KC_RIGHT_GUI", KC_RIGHT_GUI, []byte{0x00, 0xe7}},
	{"{KC_RCMD}", "KC_RIGHT_GUI", KC_RIGHT_GUI, []byte{0x00, 0xe7}},
	{"{KC_RWIN}", "KC_RIGHT_GUI", KC_RIGHT_GUI, []byte{0x00, 0xe7}},

	{"{KC_PWR}", "KC_SYSTEM_POWER", KC_SYSTEM_POWER, []byte{0x00, 0xa5}},
	{"{KC_SLEP}", "KC_SYSTEM_SLEEP", KC_SYSTEM_SLEEP, []byte{0x00, 0xa6}},
	{"{KC_WAKE}", "KC_SYSTEM_WAKE", KC_SYSTEM_WAKE, []byte{0x00, 0xa7}},

	{"{KC_MUTE}", "KC_AUDIO_MUTE", KC_AUDIO_MUTE, []byte{0x00, 0xa8}},
	{"{KC_VOLU}", "KC_AUDIO_VOL_UP", KC_AUDIO_VOL_UP, []byte{0x00, 0xa9}},
	{"{KC_VOLD}", "KC_AUDIO_VOL_DOWN", KC_AUDIO_VOL_DOWN, []byte{0x00, 0xaa}},
	{"{KC_MNXT}", "KC_MEDIA_NEXT_TRACK", KC_MEDIA_NEXT_TRACK, []byte{0x00, 0xab}},
	{"{KC_MPRV}", "KC_MEDIA_PREV_TRACK", KC_MEDIA_PREV_TRACK, []byte{0x00, 0xac}},
	{"{KC_MSTP}", "KC_MEDIA_STOP", KC_MEDIA_STOP, []byte{0x00, 0xad}},
	{"{KC_MPLY}", "KC_MEDIA_PLAY_PAUSE", KC_MEDIA_PLAY_PAUSE, []byte{0x00, 0xae}},
	{"{KC_MSEL}", "KC_MEDIA_SELECT", KC_MEDIA_SELECT, []byte{0x00, 0xaf}},
	{"{KC_EJCT}", "KC_MEDIA_EJECT", KC_MEDIA_EJECT, []byte{0x00, 0xb0}},
	{"{KC_CALC}", "KC_CALCULATOR", KC_CALCULATOR, []byte{0x00, 0xb2}},
	{"{KC_MYCM}", "KC_MY_COMPUTER", KC_MY_COMPUTER, []byte{0x00, 0xb3}},
	{"{KC_WSCH}", "KC_WWW_SEARCH", KC_WWW_SEARCH, []byte{0x00, 0xb4}},
	{"{KC_WHOM}", "KC_WWW_HOME", KC_WWW_HOME, []byte{0x00, 0xb5}},
	{"{KC_WBAK}", "KC_WWW_BACK", KC_WWW_BACK, []byte{0x00, 0xb6}},
	{"{KC_WFWD}", "KC_WWW_FORWARD", KC_WWW_FORWARD, []byte{0x00, 0xb7}},
	{"{KC_WSTP}", "KC_WWW_STOP", KC_WWW_STOP, []byte{0x00, 0xb8}},
	{"{KC_WREF}", "KC_WWW_REFRESH", KC_WWW_REFRESH, []byte{0x00, 0xb9}},
	{"{KC_WFAV}", "KC_WWW_FAVORITES", KC_WWW_FAVORITES, []byte{0x00, 0xba}},
	{"{KC_MFFD}", "KC_MEDIA_FAST_FORWARD", KC_MEDIA_FAST_FORWARD, []byte{0x00, 0xbb}},
	{"{KC_MRWD}", "KC_MEDIA_REWIND", KC_MEDIA_REWIND, []byte{0x00, 0xbc}},
	{"{KC_BRIU}", "KC_BRIGHTNESS_UP", KC_BRIGHTNESS_UP, []byte{0x00, 0xbd}},
	{"{KC_BRID}", "KC_BRIGHTNESS_DOWN", KC_BRIGHTNESS_DOWN, []byte{0x00, 0xbe}},

	{"{KC_BRMU}", "KC_PAUSE", KC_PAUSE, []byte{0x00, 0x48}},
	{"{KC_BRMD}", "KC_SCROLL_LOCK", KC_SCROLL_LOCK, []byte{0x00, 0x47}},

	{"{KC_MS_U}", "KC_MS_UP", KC_MS_UP, []byte{0x00, 0xf0}},
	{"{KC_MS_D}", "KC_MS_DOWN", KC_MS_DOWN, []byte{0x00, 0xf1}},
	{"{KC_MS_L}", "KC_MS_LEFT", KC_MS_LEFT, []byte{0x00, 0xf2}},
	{"{KC_MS_R}", "KC_MS_RIGHT", KC_MS_RIGHT, []byte{0x00, 0xf3}},
	{"{KC_BTN1}", "KC_MS_BTN1", KC_MS_BTN1, []byte{0x00, 0xf4}},
	{"{KC_BTN2}", "KC_MS_BTN2", KC_MS_BTN2, []byte{0x00, 0xf5}},
	{"{KC_BTN3}", "KC_MS_BTN3", KC_MS_BTN3, []byte{0x00, 0xf6}},
	{"{KC_BTN4}", "KC_MS_BTN4", KC_MS_BTN4, []byte{0x00, 0xf7}},
	{"{KC_BTN5}", "KC_MS_BTN5", KC_MS_BTN5, []byte{0x00, 0xf8}},
	{"{KC_BTN6}", "KC_MS_BTN5", KC_MS_BTN6, []byte{0x00, 0xf8}},
	{"{KC_BTN7}", "KC_MS_BTN5", KC_MS_BTN7, []byte{0x00, 0xf8}},
	{"{KC_BTN8}", "KC_MS_BTN5", KC_MS_BTN8, []byte{0x00, 0xf8}},
	{"{KC_WH_U}", "KC_MS_WH_UP", KC_MS_WH_UP, []byte{0x00, 0xf9}},
	{"{KC_WH_D}", "KC_MS_WH_DOWN", KC_MS_WH_DOWN, []byte{0x00, 0xfa}},
	{"{KC_WH_L}", "KC_MS_WH_LEFT", KC_MS_WH_LEFT, []byte{0x00, 0xfb}},
	{"{KC_WH_R}", "KC_MS_WH_RIGHT", KC_MS_WH_RIGHT, []byte{0x00, 0xfc}},
	{"{KC_ACL0}", "KC_MS_ACCEL0", KC_MS_ACCEL0, []byte{0x00, 0xfd}},
	{"{KC_ACL1}", "KC_MS_ACCEL1", KC_MS_ACCEL1, []byte{0x00, 0xfe}},
	{"{KC_ACL2}", "KC_MS_ACCEL2", KC_MS_ACCEL2, []byte{0x00, 0xff}},

	{"{KC_SYSTEM_POWER}", "KC_SYSTEM_POWER", KC_SYSTEM_POWER, []byte{0x00, 0xa5}},
	{"{KC_SYSTEM_SLEEP}", "KC_SYSTEM_SLEEP", KC_SYSTEM_SLEEP, []byte{0x00, 0xa6}},
	{"{KC_SYSTEM_WAKE}", "KC_SYSTEM_WAKE", KC_SYSTEM_WAKE, []byte{0x00, 0xa7}},

	{"{KC_AUDIO_MUTE}", "KC_AUDIO_MUTE", KC_AUDIO_MUTE, []byte{0x00, 0xa8}},
	{"{KC_AUDIO_VOL_UP}", "KC_AUDIO_VOL_UP", KC_AUDIO_VOL_UP, []byte{0x00, 0xa9}},
	{"{KC_AUDIO_VOL_DOWN}", "KC_AUDIO_VOL_DOWN", KC_AUDIO_VOL_DOWN, []byte{0x00, 0xaa}},
	{"{KC_MEDIA_NEXT_TRACK}", "KC_MEDIA_NEXT_TRACK", KC_MEDIA_NEXT_TRACK, []byte{0x00, 0xab}},
	{"{KC_MEDIA_PREV_TRACK}", "KC_MEDIA_PREV_TRACK", KC_MEDIA_PREV_TRACK, []byte{0x00, 0xac}},
	{"{KC_MEDIA_STOP}", "KC_MEDIA_STOP", KC_MEDIA_STOP, []byte{0x00, 0xad}},
	{"{KC_MEDIA_PLAY_PAUSE}", "KC_MEDIA_PLAY_PAUSE", KC_MEDIA_PLAY_PAUSE, []byte{0x00, 0xae}},
	{"{KC_MEDIA_SELECT}", "KC_MEDIA_SELECT", KC_MEDIA_SELECT, []byte{0x00, 0xaf}},
	{"{KC_MEDIA_EJECT}", "KC_MEDIA_EJECT", KC_MEDIA_EJECT, []byte{0x00, 0xb0}},
	{"{KC_MAIL}", "KC_MAIL", KC_MAIL, []byte{0x00, 0xb1}},
	{"{KC_CALCULATOR}", "KC_CALCULATOR", KC_CALCULATOR, []byte{0x00, 0xb2}},
	{"{KC_MY_COMPUTER}", "KC_MY_COMPUTER", KC_MY_COMPUTER, []byte{0x00, 0xb3}},
	{"{KC_WWW_SEARCH}", "KC_WWW_SEARCH", KC_WWW_SEARCH, []byte{0x00, 0xb4}},
	{"{KC_WWW_HOME}", "KC_WWW_HOME", KC_WWW_HOME, []byte{0x00, 0xb5}},
	{"{KC_WWW_BACK}", "KC_WWW_BACK", KC_WWW_BACK, []byte{0x00, 0xb6}},
	{"{KC_WWW_FORWARD}", "KC_WWW_FORWARD", KC_WWW_FORWARD, []byte{0x00, 0xb7}},
	{"{KC_WWW_STOP}", "KC_WWW_STOP", KC_WWW_STOP, []byte{0x00, 0xb8}},
	{"{KC_WWW_REFRESH}", "KC_WWW_REFRESH", KC_WWW_REFRESH, []byte{0x00, 0xb9}},
	{"{KC_WWW_FAVORITES}", "KC_WWW_FAVORITES", KC_WWW_FAVORITES, []byte{0x00, 0xba}},
	{"{KC_MEDIA_FAST_FORWARD}", "KC_MEDIA_FAST_FORWARD", KC_MEDIA_FAST_FORWARD, []byte{0x00, 0xbb}},
	{"{KC_MEDIA_REWIND}", "KC_MEDIA_REWIND", KC_MEDIA_REWIND, []byte{0x00, 0xbc}},
	{"{KC_BRIGHTNESS_UP}", "KC_BRIGHTNESS_UP", KC_BRIGHTNESS_UP, []byte{0x00, 0xbd}},
	{"{KC_BRIGHTNESS_DOWN}", "KC_BRIGHTNESS_DOWN", KC_BRIGHTNESS_DOWN, []byte{0x00, 0xbe}},

	{"{KC_NO}", "KC_NO", KC_NO, []byte{0x00, 0x00}},
	{"{KC_ROLL_OVER}", "KC_TRANSPARENT", KC_ROLL_OVER, []byte{0x00, 0x01}},
	{"{KC_POST_FAIL}", "KC_POST_FAIL", KC_POST_FAIL, []byte{0x00, 0x02}},
	{"{KC_UNDEFINED}", "KC_UNDEFINED", KC_UNDEFINED, []byte{0x00, 0x03}},
	{"{KC_A}", "KC_A", KC_A, []byte{0x00, 0x04}},
	{"{KC_B}", "KC_B", KC_B, []byte{0x00, 0x05}},
	{"{KC_C}", "KC_C", KC_C, []byte{0x00, 0x06}},
	{"{KC_D}", "KC_D", KC_D, []byte{0x00, 0x07}},
	{"{KC_E}", "KC_E", KC_E, []byte{0x00, 0x08}},
	{"{KC_F}", "KC_F", KC_F, []byte{0x00, 0x09}},
	{"{KC_G}", "KC_G", KC_G, []byte{0x00, 0x0a}},
	{"{KC_H}", "KC_H", KC_H, []byte{0x00, 0x0b}},
	{"{KC_I}", "KC_I", KC_I, []byte{0x00, 0x0c}},
	{"{KC_J}", "KC_J", KC_J, []byte{0x00, 0x0d}},
	{"{KC_K}", "KC_K", KC_K, []byte{0x00, 0x0e}},
	{"{KC_L}", "KC_L", KC_L, []byte{0x00, 0x0f}},
	{"{KC_M}", "KC_M", KC_M, []byte{0x00, 0x10}},
	{"{KC_N}", "KC_N", KC_N, []byte{0x00, 0x11}},
	{"{KC_O}", "KC_O", KC_O, []byte{0x00, 0x12}},
	{"{KC_P}", "KC_P", KC_P, []byte{0x00, 0x13}},
	{"{KC_Q}", "KC_Q", KC_Q, []byte{0x00, 0x14}},
	{"{KC_R}", "KC_R", KC_R, []byte{0x00, 0x15}},
	{"{KC_S}", "KC_S", KC_S, []byte{0x00, 0x16}},
	{"{KC_T}", "KC_T", KC_T, []byte{0x00, 0x17}},
	{"{KC_U}", "KC_U", KC_U, []byte{0x00, 0x18}},
	{"{KC_V}", "KC_V", KC_V, []byte{0x00, 0x19}},
	{"{KC_W}", "KC_W", KC_W, []byte{0x00, 0x1a}},
	{"{KC_X}", "KC_X", KC_X, []byte{0x00, 0x1b}},
	{"{KC_Y}", "KC_Y", KC_Y, []byte{0x00, 0x1c}},
	{"{KC_Z}", "KC_Z", KC_Z, []byte{0x00, 0x1d}},
	{"{KC_1}", "KC_1", KC_1, []byte{0x00, 0x1e}},
	{"{KC_2}", "KC_2", KC_2, []byte{0x00, 0x1f}},
	{"{KC_3}", "KC_3", KC_3, []byte{0x00, 0x20}},
	{"{KC_4}", "KC_4", KC_4, []byte{0x00, 0x21}},
	{"{KC_5}", "KC_5", KC_5, []byte{0x00, 0x22}},
	{"{KC_6}", "KC_6", KC_6, []byte{0x00, 0x23}},
	{"{KC_7}", "KC_7", KC_7, []byte{0x00, 0x24}},
	{"{KC_8}", "KC_8", KC_8, []byte{0x00, 0x25}},
	{"{KC_9}", "KC_9", KC_9, []byte{0x00, 0x26}},
	{"{KC_0}", "KC_0", KC_0, []byte{0x00, 0x27}},
	{"{KC_ENTER}", "KC_ENTER", KC_ENTER, []byte{0x00, 0x28}},
	{"{KC_ESCAPE}", "KC_ESCAPE", KC_ESCAPE, []byte{0x00, 0x29}},
	{"{KC_BACKSPACE}", "KC_BACKSPACE", KC_BACKSPACE, []byte{0x00, 0x2a}},
	{"{KC_TAB}", "KC_TAB", KC_TAB, []byte{0x00, 0x2b}},
	{"{KC_SPACE}", "KC_SPACE", KC_SPACE, []byte{0x00, 0x2c}},
	{"{KC_MINUS}", "KC_MINUS", KC_MINUS, []byte{0x00, 0x2d}},
	{"{KC_EQUAL}", "KC_EQUAL", KC_EQUAL, []byte{0x00, 0x2e}},
	{"{KC_LEFT_BRACKET}", "KC_LEFT_BRACKET", KC_LEFT_BRACKET, []byte{0x00, 0x2f}},
	{"{KC_RIGHT_BRACKET}", "KC_RIGHT_BRACKET", KC_RIGHT_BRACKET, []byte{0x00, 0x30}},
	{"{KC_BACKSLASH}", "KC_BACKSLASH", KC_BACKSLASH, []byte{0x00, 0x31}},
	{"{KC_NONUS_HASH}", "KC_NONUS_HASH", KC_NONUS_HASH, []byte{0x00, 0x32}},
	{"{KC_SEMICOLON}", "KC_SEMICOLON", KC_SEMICOLON, []byte{0x00, 0x33}},
	{"{KC_QUOTE}", "KC_QUOTE", KC_QUOTE, []byte{0x00, 0x34}},
	{"{KC_GRAVE}", "KC_GRAVE", KC_GRAVE, []byte{0x00, 0x35}},
	{"{KC_COMMA}", "KC_COMMA", KC_COMMA, []byte{0x00, 0x36}},
	{"{KC_DOT}", "KC_DOT", KC_DOT, []byte{0x00, 0x37}},
	{"{KC_SLASH}", "KC_SLASH", KC_SLASH, []byte{0x00, 0x38}},
	{"{KC_CAPS_LOCK}", "KC_CAPS_LOCK", KC_CAPS_LOCK, []byte{0x00, 0x39}},
	{"{KC_F1}", "KC_F1", KC_F1, []byte{0x00, 0x3a}},
	{"{KC_F2}", "KC_F2", KC_F2, []byte{0x00, 0x3b}},
	{"{KC_F3}", "KC_F3", KC_F3, []byte{0x00, 0x3c}},
	{"{KC_F4}", "KC_F4", KC_F4, []byte{0x00, 0x3d}},
	{"{KC_F5}", "KC_F5", KC_F5, []byte{0x00, 0x3e}},
	{"{KC_F6}", "KC_F6", KC_F6, []byte{0x00, 0x3f}},
	{"{KC_F7}", "KC_F7", KC_F7, []byte{0x00, 0x40}},
	{"{KC_F8}", "KC_F8", KC_F8, []byte{0x00, 0x41}},
	{"{KC_F9}", "KC_F9", KC_F9, []byte{0x00, 0x42}},
	{"{KC_F10}", "KC_F10", KC_F10, []byte{0x00, 0x43}},
	{"{KC_F11}", "KC_F11", KC_F11, []byte{0x00, 0x44}},
	{"{KC_F12}", "KC_F12", KC_F12, []byte{0x00, 0x45}},
	{"{KC_PRINT_SCREEN}", "KC_PRINT_SCREEN", KC_PRINT_SCREEN, []byte{0x00, 0x46}},
	{"{KC_SCROLL_LOCK}", "KC_SCROLL_LOCK", KC_SCROLL_LOCK, []byte{0x00, 0x47}},
	{"{KC_PAUSE}", "KC_PAUSE", KC_PAUSE, []byte{0x00, 0x48}},
	{"{KC_INSERT}", "KC_INSERT", KC_INSERT, []byte{0x00, 0x49}},
	{"{KC_HOME}", "KC_HOME", KC_HOME, []byte{0x00, 0x4a}},
	{"{KC_PAGE_UP}", "KC_PAGE_UP", KC_PAGE_UP, []byte{0x00, 0x4b}},
	{"{KC_DELETE}", "KC_DELETE", KC_DELETE, []byte{0x00, 0x4c}},
	{"{KC_END}", "KC_END", KC_END, []byte{0x00, 0x4d}},
	{"{KC_PAGE_DOWN}", "KC_PAGE_DOWN", KC_PAGE_DOWN, []byte{0x00, 0x4e}},
	{"{KC_RIGHT}", "KC_RIGHT", KC_RIGHT, []byte{0x00, 0x4f}},
	{"{KC_LEFT}", "KC_LEFT", KC_LEFT, []byte{0x00, 0x50}},
	{"{KC_DOWN}", "KC_DOWN", KC_DOWN, []byte{0x00, 0x51}},
	{"{KC_UP}", "KC_UP", KC_UP, []byte{0x00, 0x52}},
	{"{KC_NUM_LOCK}", "KC_NUM_LOCK", KC_NUM_LOCK, []byte{0x00, 0x53}},
	{"{KC_KP_SLASH}", "KC_KP_SLASH", KC_KP_SLASH, []byte{0x00, 0x54}},
	{"{KC_KP_ASTERISK}", "KC_KP_ASTERISK", KC_KP_ASTERISK, []byte{0x00, 0x55}},
	{"{KC_KP_MINUS}", "KC_KP_MINUS", KC_KP_MINUS, []byte{0x00, 0x56}},
	{"{KC_KP_PLUS}", "KC_KP_PLUS", KC_KP_PLUS, []byte{0x00, 0x57}},
	{"{KC_KP_ENTER}", "KC_KP_ENTER", KC_KP_ENTER, []byte{0x00, 0x58}},
	{"{KC_KP_1}", "KC_KP_1", KC_KP_1, []byte{0x00, 0x59}},
	{"{KC_KP_2}", "KC_KP_2", KC_KP_2, []byte{0x00, 0x5a}},
	{"{KC_KP_3}", "KC_KP_3", KC_KP_3, []byte{0x00, 0x5b}},
	{"{KC_KP_4}", "KC_KP_4", KC_KP_4, []byte{0x00, 0x5c}},
	{"{KC_KP_5}", "KC_KP_5", KC_KP_5, []byte{0x00, 0x5d}},
	{"{KC_KP_6}", "KC_KP_6", KC_KP_6, []byte{0x00, 0x5e}},
	{"{KC_KP_7}", "KC_KP_7", KC_KP_7, []byte{0x00, 0x5f}},
	{"{KC_KP_8}", "KC_KP_8", KC_KP_8, []byte{0x00, 0x60}},
	{"{KC_KP_9}", "KC_KP_9", KC_KP_9, []byte{0x00, 0x61}},
	{"{KC_KP_0}", "KC_KP_0", KC_KP_0, []byte{0x00, 0x62}},
	{"{KC_KP_DOT}", "KC_KP_DOT", KC_KP_DOT, []byte{0x00, 0x63}},
	{"{KC_NONUS_BACKSLASH}", "KC_NONUS_BACKSLASH", KC_NONUS_BACKSLASH, []byte{0x00, 0x64}},
	{"{KC_APPLICATION}", "KC_APPLICATION", KC_APPLICATION, []byte{0x00, 0x65}},
	{"{KC_KB_POWER}", "KC_KB_POWER", KC_KB_POWER, []byte{0x00, 0x66}},
	{"{KC_KP_EQUAL}", "KC_KP_EQUAL", KC_KP_EQUAL, []byte{0x00, 0x67}},
	{"{KC_F13}", "KC_F13", KC_F13, []byte{0x00, 0x68}},
	{"{KC_F14}", "KC_F14", KC_F14, []byte{0x00, 0x69}},
	{"{KC_F15}", "KC_F15", KC_F15, []byte{0x00, 0x6a}},
	{"{KC_F16}", "KC_F16", KC_F16, []byte{0x00, 0x6b}},
	{"{KC_F17}", "KC_F17", KC_F17, []byte{0x00, 0x6c}},
	{"{KC_F18}", "KC_F18", KC_F18, []byte{0x00, 0x6d}},
	{"{KC_F19}", "KC_F19", KC_F19, []byte{0x00, 0x6e}},
	{"{KC_F20}", "KC_F20", KC_F20, []byte{0x00, 0x6f}},
	{"{KC_F21}", "KC_F21", KC_F21, []byte{0x00, 0x70}},
	{"{KC_F22}", "KC_F22", KC_F22, []byte{0x00, 0x71}},
	{"{KC_F23}", "KC_F23", KC_F23, []byte{0x00, 0x72}},
	{"{KC_F24}", "KC_F24", KC_F24, []byte{0x00, 0x73}},
	{"{KC_EXECUTE}", "KC_EXECUTE", KC_EXECUTE, []byte{0x00, 0x74}},
	{"{KC_HELP}", "KC_HELP", KC_HELP, []byte{0x00, 0x75}},
	{"{KC_MENU}", "KC_MENU", KC_MENU, []byte{0x00, 0x76}},
	{"{KC_SELECT}", "KC_SELECT", KC_SELECT, []byte{0x00, 0x77}},
	{"{KC_STOP}", "KC_STOP", KC_STOP, []byte{0x00, 0x78}},
	{"{KC_AGAIN}", "KC_AGAIN", KC_AGAIN, []byte{0x00, 0x79}},
	{"{KC_UNDO}", "KC_UNDO", KC_UNDO, []byte{0x00, 0x7a}},
	{"{KC_CUT}", "KC_CUT", KC_CUT, []byte{0x00, 0x7b}},
	{"{KC_COPY}", "KC_COPY", KC_COPY, []byte{0x00, 0x7c}},
	{"{KC_PASTE}", "KC_PASTE", KC_PASTE, []byte{0x00, 0x7d}},
	{"{KC_FIND}", "KC_FIND", KC_FIND, []byte{0x00, 0x7e}},
	{"{KC_KB_MUTE}", "KC_KB_MUTE", KC_KB_MUTE, []byte{0x00, 0x7f}},
	{"{KC_KB_VOLUME_UP}", "KC_KB_VOLUME_UP", KC_KB_VOLUME_UP, []byte{0x00, 0x80}},
	{"{KC_KB_VOLUME_DOWN}", "KC_KB_VOLUME_DOWN", KC_KB_VOLUME_DOWN, []byte{0x00, 0x81}},
	{"{KC_LOCKING_CAPS_LOCK}", "KC_LOCKING_CAPS_LOCK", KC_LOCKING_CAPS_LOCK, []byte{0x00, 0x82}},
	{"{KC_LOCKING_NUM_LOCK}", "KC_LOCKING_NUM_LOCK", KC_LOCKING_NUM_LOCK, []byte{0x00, 0x83}},
	{"{KC_LOCKING_SCROLL_LOCK}", "KC_LOCKING_SCROLL_LOCK", KC_LOCKING_SCROLL_LOCK, []byte{0x00, 0x84}},
	{"{KC_KP_COMMA}", "KC_KP_COMMA", KC_KP_COMMA, []byte{0x00, 0x85}},
	{"{KC_KP_EQUAL_AS400}", "KC_KP_EQUAL_AS400", KC_KP_EQUAL_AS400, []byte{0x00, 0x86}},
	{"{KC_INTERNATIONAL_1}", "KC_INTERNATIONAL_1", KC_INTERNATIONAL_1, []byte{0x00, 0x87}},
	{"{KC_INTERNATIONAL_2}", "KC_INTERNATIONAL_2", KC_INTERNATIONAL_2, []byte{0x00, 0x88}},
	{"{KC_INTERNATIONAL_3}", "KC_INTERNATIONAL_3", KC_INTERNATIONAL_3, []byte{0x00, 0x89}},
	{"{KC_INTERNATIONAL_4}", "KC_INTERNATIONAL_4", KC_INTERNATIONAL_4, []byte{0x00, 0x8a}},
	{"{KC_INTERNATIONAL_5}", "KC_INTERNATIONAL_5", KC_INTERNATIONAL_5, []byte{0x00, 0x8b}},
	{"{KC_INTERNATIONAL_6}", "KC_INTERNATIONAL_6", KC_INTERNATIONAL_6, []byte{0x00, 0x8c}},
	{"{KC_INTERNATIONAL_7}", "KC_INTERNATIONAL_7", KC_INTERNATIONAL_7, []byte{0x00, 0x8d}},
	{"{KC_INTERNATIONAL_8}", "KC_INTERNATIONAL_8", KC_INTERNATIONAL_8, []byte{0x00, 0x8e}},
	{"{KC_INTERNATIONAL_9}", "KC_INTERNATIONAL_9", KC_INTERNATIONAL_9, []byte{0x00, 0x8f}},
	{"{KC_LANGUAGE_1}", "KC_LANGUAGE_1", KC_LANGUAGE_1, []byte{0x00, 0x90}},
	{"{KC_LANGUAGE_2}", "KC_LANGUAGE_2", KC_LANGUAGE_2, []byte{0x00, 0x91}},
	{"{KC_LANGUAGE_3}", "KC_LANGUAGE_3", KC_LANGUAGE_3, []byte{0x00, 0x92}},
	{"{KC_LANGUAGE_4}", "KC_LANGUAGE_4", KC_LANGUAGE_4, []byte{0x00, 0x93}},
	{"{KC_LANGUAGE_5}", "KC_LANGUAGE_5", KC_LANGUAGE_5, []byte{0x00, 0x94}},
	{"{KC_LANGUAGE_6}", "KC_LANGUAGE_6", KC_LANGUAGE_6, []byte{0x00, 0x95}},
	{"{KC_LANGUAGE_7}", "KC_LANGUAGE_7", KC_LANGUAGE_7, []byte{0x00, 0x96}},
	{"{KC_LANGUAGE_8}", "KC_LANGUAGE_8", KC_LANGUAGE_8, []byte{0x00, 0x97}},
	{"{KC_LANGUAGE_9}", "KC_LANGUAGE_9", KC_LANGUAGE_9, []byte{0x00, 0x98}},
	{"{KC_ALTERNATE_ERASE}", "KC_ALTERNATE_ERASE", KC_ALTERNATE_ERASE, []byte{0x00, 0x99}},
	{"{KC_SYSTEM_REQUEST}", "KC_SYSTEM_REQUEST", KC_SYSTEM_REQUEST, []byte{0x00, 0x9a}},
	{"{KC_CANCEL}", "KC_CANCEL", KC_CANCEL, []byte{0x00, 0x9b}},
	{"{KC_CLEAR}", "KC_CLEAR", KC_CLEAR, []byte{0x00, 0x9c}},
	{"{KC_PRIOR}", "KC_PRIOR", KC_PRIOR, []byte{0x00, 0x9d}},
	{"{KC_RETURN}", "KC_RETURN", KC_RETURN, []byte{0x00, 0x9e}},
	{"{KC_SEPARATOR}", "KC_SEPARATOR", KC_SEPARATOR, []byte{0x00, 0x9f}},
	{"{KC_OUT}", "KC_OUT", KC_OUT, []byte{0x00, 0xa0}},
	{"{KC_OPER}", "KC_OPER", KC_OPER, []byte{0x00, 0xa1}},
	{"{KC_CLEAR_AGAIN}", "KC_CLEAR_AGAIN", KC_CLEAR_AGAIN, []byte{0x00, 0xa2}},
	{"{KC_CRSEL}", "KC_CRSEL", KC_CRSEL, []byte{0x00, 0xa3}},
	{"{KC_EXSEL}", "KC_EXSEL", KC_EXSEL, []byte{0x00, 0xa4}},

	{"{KC_LEFT_CTRL}", "KC_LEFT_CTRL", KC_LEFT_CTRL, []byte{0x00, 0xe0}},
	{"{KC_LEFT_SHIFT}", "KC_LEFT_SHIFT", KC_LEFT_SHIFT, []byte{0x00, 0xe1}},
	{"{KC_LEFT_ALT}", "KC_LEFT_ALT", KC_LEFT_ALT, []byte{0x00, 0xe2}},
	{"{KC_LEFT_GUI}", "KC_LEFT_GUI", KC_LEFT_GUI, []byte{0x00, 0xe3}},
	{"{KC_RIGHT_CTRL}", "KC_RIGHT_CTRL", KC_RIGHT_CTRL, []byte{0x00, 0xe4}},
	{"{KC_RIGHT_SHIFT}", "KC_RIGHT_SHIFT", KC_RIGHT_SHIFT, []byte{0x00, 0xe5}},
	{"{KC_RIGHT_ALT}", "KC_RIGHT_ALT", KC_RIGHT_ALT, []byte{0x00, 0xe6}},
	{"{KC_RIGHT_GUI}", "KC_RIGHT_GUI", KC_RIGHT_GUI, []byte{0x00, 0xe7}},

	{"{KC_FN0}", "KC_FN0", KC_FN0, []byte{0x00, 0xc0}},
	{"{KC_FN1}", "KC_FN1", KC_FN1, []byte{0x00, 0xc1}},
	{"{KC_FN2}", "KC_FN2", KC_FN2, []byte{0x00, 0xc2}},
	{"{KC_FN3}", "KC_FN3", KC_FN3, []byte{0x00, 0xc3}},
	{"{KC_FN4}", "KC_FN4", KC_FN4, []byte{0x00, 0xc4}},
	{"{KC_FN5}", "KC_FN5", KC_FN5, []byte{0x00, 0xc5}},
	{"{KC_FN6}", "KC_FN6", KC_FN6, []byte{0x00, 0xc6}},
	{"{KC_FN7}", "KC_FN7", KC_FN7, []byte{0x00, 0xc7}},
	{"{KC_FN8}", "KC_FN8", KC_FN8, []byte{0x00, 0xc8}},
	{"{KC_FN9}", "KC_FN9", KC_FN9, []byte{0x00, 0xc9}},
	{"{KC_FN10}", "KC_FN10", KC_FN10, []byte{0x00, 0xca}},
	{"{KC_FN11}", "KC_FN11", KC_FN11, []byte{0x00, 0xcb}},
	{"{KC_FN12}", "KC_FN12", KC_FN12, []byte{0x00, 0xcc}},
	{"{KC_FN13}", "KC_FN13", KC_FN13, []byte{0x00, 0xcd}},
	{"{KC_FN14}", "KC_FN14", KC_FN14, []byte{0x00, 0xce}},
	{"{KC_FN15}", "KC_FN15", KC_FN15, []byte{0x00, 0xcf}},
	{"{KC_FN16}", "KC_FN16", KC_FN16, []byte{0x00, 0xd0}},
	{"{KC_FN17}", "KC_FN17", KC_FN17, []byte{0x00, 0xd1}},
	{"{KC_FN18}", "KC_FN18", KC_FN18, []byte{0x00, 0xd2}},
	{"{KC_FN19}", "KC_FN19", KC_FN19, []byte{0x00, 0xd3}},
	{"{KC_FN20}", "KC_FN20", KC_FN20, []byte{0x00, 0xd4}},
	{"{KC_FN21}", "KC_FN21", KC_FN21, []byte{0x00, 0xd5}},
	{"{KC_FN22}", "KC_FN22", KC_FN22, []byte{0x00, 0xd6}},
	{"{KC_FN23}", "KC_FN23", KC_FN23, []byte{0x00, 0xd7}},
	{"{KC_FN24}", "KC_FN24", KC_FN24, []byte{0x00, 0xd8}},
	{"{KC_FN25}", "KC_FN25", KC_FN25, []byte{0x00, 0xd9}},
	{"{KC_FN26}", "KC_FN26", KC_FN26, []byte{0x00, 0xda}},
	{"{KC_FN27}", "KC_FN27", KC_FN27, []byte{0x00, 0xdb}},
	{"{KC_FN28}", "KC_FN28", KC_FN28, []byte{0x00, 0xdc}},
	{"{KC_FN29}", "KC_FN29", KC_FN29, []byte{0x00, 0xdd}},
	{"{KC_FN30}", "KC_FN30", KC_FN30, []byte{0x00, 0xde}},
	{"{KC_FN31}", "KC_FN31", KC_FN31, []byte{0x00, 0xdf}},

	{"{KC_MS_UP}", "KC_MS_UP", KC_MS_UP, []byte{0x00, 0xf0}},
	{"{KC_MS_DOWN}", "KC_MS_DOWN", KC_MS_DOWN, []byte{0x00, 0xf1}},
	{"{KC_MS_LEFT}", "KC_MS_LEFT", KC_MS_LEFT, []byte{0x00, 0xf2}},
	{"{KC_MS_RIGHT}", "KC_MS_RIGHT", KC_MS_RIGHT, []byte{0x00, 0xf3}},
	{"{KC_MS_BTN1}", "KC_MS_BTN1", KC_MS_BTN1, []byte{0x00, 0xf4}},
	{"{KC_MS_BTN2}", "KC_MS_BTN2", KC_MS_BTN2, []byte{0x00, 0xf5}},
	{"{KC_MS_BTN3}", "KC_MS_BTN3", KC_MS_BTN3, []byte{0x00, 0xf6}},
	{"{KC_MS_BTN4}", "KC_MS_BTN4", KC_MS_BTN4, []byte{0x00, 0xf7}},
	{"{KC_MS_BTN5}", "KC_MS_BTN5", KC_MS_BTN5, []byte{0x00, 0xf8}},
	{"{KC_MS_BTN6}", "KC_MS_BTN5", KC_MS_BTN6, []byte{0x00, 0xf8}},
	{"{KC_MS_BTN7}", "KC_MS_BTN5", KC_MS_BTN7, []byte{0x00, 0xf8}},
	{"{KC_MS_BTN8}", "KC_MS_BTN5", KC_MS_BTN8, []byte{0x00, 0xf8}},

	{"{KC_MS_WH_UP}", "KC_MS_WH_UP", KC_MS_WH_UP, []byte{0x00, 0xf9}},
	{"{KC_MS_WH_DOWN}", "KC_MS_WH_DOWN", KC_MS_WH_DOWN, []byte{0x00, 0xfa}},
	{"{KC_MS_WH_LEFT}", "KC_MS_WH_LEFT", KC_MS_WH_LEFT, []byte{0x00, 0xfb}},
	{"{KC_MS_WH_RIGHT}", "KC_MS_WH_RIGHT", KC_MS_WH_RIGHT, []byte{0x00, 0xfc}},

	{"{KC_MS_ACCEL0}", "KC_MS_ACCEL0", KC_MS_ACCEL0, []byte{0x00, 0xfd}},
	{"{KC_MS_ACCEL1}", "KC_MS_ACCEL1", KC_MS_ACCEL1, []byte{0x00, 0xfe}},
	{"{KC_MS_ACCEL2}", "KC_MS_ACCEL2", KC_MS_ACCEL2, []byte{0x00, 0xff}},

	{"{KC_BSPACE}", "KC_BACKSPACE", KC_BACKSPACE, []byte{0x00, 0x2a}},
	{"{KC_LBRACKET}", "KC_LEFT_BRACKET", KC_LEFT_BRACKET, []byte{0x00, 0x2f}},
	{"{KC_RBRACKET}", "KC_RIGHT_BRACKET", KC_RIGHT_BRACKET, []byte{0x00, 0x30}},
	{"{KC_BSLASH}", "KC_BACKSLASH", KC_BACKSLASH, []byte{0x00, 0x31}},
	{"{KC_SCOLON}", "KC_SEMICOLON", KC_SEMICOLON, []byte{0x00, 0x33}},
	{"{KC_CAPSLOCK}", "KC_CAPS_LOCK", KC_CAPS_LOCK, []byte{0x00, 0x39}},
	{"{KC_PSCREEN}", "KC_PRINT_SCREEN", KC_PRINT_SCREEN, []byte{0x00, 0x46}},
	{"{KC_SCROLLLOCK}", "KC_SCROLL_LOCK", KC_SCROLL_LOCK, []byte{0x00, 0x47}},
	{"{KC_PGDOWN}", "KC_PAGE_DOWN", KC_PAGE_DOWN, []byte{0x00, 0x4e}},
	{"{KC_NUMLOCK}", "KC_NUM_LOCK", KC_NUM_LOCK, []byte{0x00, 0x53}},
	{"{KC_NONUS_BSLASH}", "KC_NONUS_BACKSLASH", KC_NONUS_BACKSLASH, []byte{0x00, 0x64}},
	{"{KC_POWER}", "KC_KB_POWER", KC_KB_POWER, []byte{0x00, 0x66}},
	{"{KC__MUTE}", "KC_KB_MUTE", KC_KB_MUTE, []byte{0x00, 0x7f}},
	{"{KC__VOLUP}", "KC_KB_VOLUME_UP", KC_KB_VOLUME_UP, []byte{0x00, 0x80}},
	{"{KC__VOLDOWN}", "KC_KB_VOLUME_DOWN", KC_KB_VOLUME_DOWN, []byte{0x00, 0x81}},
	{"{KC_LOCKING_CAPS}", "KC_LOCKING_CAPS_LOCK", KC_LOCKING_CAPS_LOCK, []byte{0x00, 0x82}},
	{"{KC_LOCKING_NUM}", "KC_LOCKING_NUM_LOCK", KC_LOCKING_NUM_LOCK, []byte{0x00, 0x83}},
	{"{KC_LOCKING_SCROLL}", "KC_LOCKING_SCROLL_LOCK", KC_LOCKING_SCROLL_LOCK, []byte{0x00, 0x84}},
	{"{KC_LANG1}", "KC_LANGUAGE_1", KC_LANGUAGE_1, []byte{0x00, 0x90}},
	{"{KC_LANG2}", "KC_LANGUAGE_2", KC_LANGUAGE_2, []byte{0x00, 0x91}},
	{"{KC_LANG3}", "KC_LANGUAGE_3", KC_LANGUAGE_3, []byte{0x00, 0x92}},
	{"{KC_LANG4}", "KC_LANGUAGE_4", KC_LANGUAGE_4, []byte{0x00, 0x93}},
	{"{KC_LANG5}", "KC_LANGUAGE_5", KC_LANGUAGE_5, []byte{0x00, 0x94}},
	{"{KC_LANG6}", "KC_LANGUAGE_6", KC_LANGUAGE_6, []byte{0x00, 0x95}},
	{"{KC_LANG7}", "KC_LANGUAGE_7", KC_LANGUAGE_7, []byte{0x00, 0x96}},
	{"{KC_LANG8}", "KC_LANGUAGE_8", KC_LANGUAGE_8, []byte{0x00, 0x97}},
	{"{KC_LANG9}", "KC_LANGUAGE_9", KC_LANGUAGE_9, []byte{0x00, 0x98}},
	{"{KC_ALT_ERASE}", "KC_ALTERNATE_ERASE", KC_ALTERNATE_ERASE, []byte{0x00, 0x99}},
	{"{KC_SYSREQ}", "KC_SYSTEM_REQUEST", KC_SYSTEM_REQUEST, []byte{0x00, 0x9a}},

	{"{KC_LSHIFT}", "KC_LEFT_SHIFT", KC_LEFT_SHIFT, []byte{0x00, 0xe1}},
	{"{KC_RCTRL}", "KC_RIGHT_CTRL", KC_RIGHT_CTRL, []byte{0x00, 0xe4}},
	{"{KC_RSHIFT}", "KC_RIGHT_SHIFT", KC_RIGHT_SHIFT, []byte{0x00, 0xe5}},

	{"{KC_RO}", "KC_INTERNATIONAL_1", KC_INTERNATIONAL_1, []byte{0x00, 0x87}},
	{"{KC_KANA}", "KC_INTERNATIONAL_2", KC_INTERNATIONAL_2, []byte{0x00, 0x88}},
	{"{KC_JYEN}", "KC_INTERNATIONAL_3", KC_INTERNATIONAL_3, []byte{0x00, 0x89}},
	{"{KC_HENK}", "KC_INTERNATIONAL_4", KC_INTERNATIONAL_4, []byte{0x00, 0x8a}},
	{"{KC_MHEN}", "KC_INTERNATIONAL_5", KC_INTERNATIONAL_5, []byte{0x00, 0x8b}},
	{"{KC_HAEN}", "KC_LANGUAGE_1", KC_LANGUAGE_1, []byte{0x00, 0x90}},
	{"{KC_HANJ}", "KC_LANGUAGE_2", KC_LANGUAGE_2, []byte{0x00, 0x91}},

	{"{KC_SLCK}", "KC_SCROLL_LOCK", KC_SCROLL_LOCK, []byte{0x00, 0x47}},
	{"{KC_NLCK}", "KC_NUM_LOCK", KC_NUM_LOCK, []byte{0x00, 0x53}},

	{"{FN_MO13}", "FN_MO13", FN_MO13, []byte{0x5f, 0x10}},
	{"{FN_MO23}", "FN_MO23", FN_MO23, []byte{0x5f, 0x11}},
	{"{MACRO00}", "MACRO00", MACRO00, []byte{0x5f, 0x12}},
	{"{MACRO01}", "MACRO01", MACRO01, []byte{0x5f, 0x13}},
	{"{MACRO02}", "MACRO02", MACRO02, []byte{0x5f, 0x14}},
	{"{MACRO03}", "MACRO03", MACRO03, []byte{0x5f, 0x15}},
	{"{MACRO04}", "MACRO04", MACRO04, []byte{0x5f, 0x16}},
	{"{MACRO05}", "MACRO05", MACRO05, []byte{0x5f, 0x17}},
	{"{MACRO06}", "MACRO06", MACRO06, []byte{0x5f, 0x18}},
	{"{MACRO07}", "MACRO07", MACRO07, []byte{0x5f, 0x19}},
	{"{MACRO08}", "MACRO08", MACRO08, []byte{0x5f, 0x1a}},
	{"{MACRO09}", "MACRO09", MACRO09, []byte{0x5f, 0x1b}},
	{"{MACRO10}", "MACRO10", MACRO10, []byte{0x5f, 0x1c}},
	{"{MACRO11}", "MACRO11", MACRO11, []byte{0x5f, 0x1d}},
	{"{MACRO12}", "MACRO12", MACRO12, []byte{0x5f, 0x1e}},
	{"{MACRO13}", "MACRO13", MACRO13, []byte{0x5f, 0x1f}},
	{"{MACRO14}", "MACRO14", MACRO14, []byte{0x5f, 0x20}},
	{"{MACRO15}", "MACRO15", MACRO15, []byte{0x5f, 0x21}},

	{"{USER00}", "USER00", USER00, []byte{0x5f, 0x80}},
	{"{USER01}", "USER01", USER01, []byte{0x5f, 0x81}},
	{"{USER02}", "USER02", USER02, []byte{0x5f, 0x82}},
	{"{USER03}", "USER03", USER03, []byte{0x5f, 0x83}},
	{"{USER04}", "USER04", USER04, []byte{0x5f, 0x84}},
	{"{USER05}", "USER05", USER05, []byte{0x5f, 0x85}},
	{"{USER06}", "USER06", USER06, []byte{0x5f, 0x86}},
	{"{USER07}", "USER07", USER07, []byte{0x5f, 0x87}},
	{"{USER08}", "USER08", USER08, []byte{0x5f, 0x88}},
	{"{USER09}", "USER09", USER09, []byte{0x5f, 0x89}},
	{"{USER10}", "USER10", USER10, []byte{0x5f, 0x8a}},
	{"{USER11}", "USER11", USER11, []byte{0x5f, 0x8b}},
	{"{USER12}", "USER12", USER12, []byte{0x5f, 0x8c}},
	{"{USER13}", "USER13", USER13, []byte{0x5f, 0x8d}},
	{"{USER14}", "USER14", USER14, []byte{0x5f, 0x8e}},
	{"{USER15}", "USER15", USER15, []byte{0x5f, 0x8f}},

	{"KC_NO", "KC_NO", KC_NO, []byte{0x00, 0}},
}

func TestKeycodeFromString(t *testing.T) {
	for i, test := range keycodeTests {
		keycode, err := KeycodeFromString(test.Input)
		if err != nil {
			t.Errorf(err.Error(), test.Input)
		}
		if test.Keycode != keycode {
			t.Errorf("[%v] (%v) wanted keycode %v, got %v", i, test.Input, test.Keycode, keycode)
		}

	}
}

func TestKeycodeToName(t *testing.T) {
	for i, test := range keycodeTests {
		name := test.Keycode.Name()
		if test.Name != name {
			t.Errorf("[%v] (%v) wanted keycode name %v, got %v", i, test.Input, test.Name, name)
		}
	}
}

func TestKeycodeToBytes(t *testing.T) {
	for i, test := range keycodeTests {
		b := test.Keycode.ToBytes()
		if !bytes.Equal(test.Bytes, b) {
			t.Errorf("[%v] (%v) wanted keycode bytes %v, got %v", i, test.Input, test.Bytes, b)
		}
	}
}
